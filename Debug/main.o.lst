   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "main.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_GPIO_SetOutputHigh,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_GPIO_SetOutputHigh:
  25              	.LFB171:
  26              	 .file 1 "F:/Fuckultate/ProectSI/Libraries/XMCLib/inc/xmc_gpio.h"
   1:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
   7:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.1.18 - XMC Peripheral Driver Library 
   8:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.                        
  11:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                             
  12:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * following conditions are met:   
  14:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  15:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer.                        
  17:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  18:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  21:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * products derived from this software without specific prior written permission.                  
  23:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  24:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  32:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  35:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  37:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  38:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  39:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  40:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  41:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  42:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *      
  43:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  44:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  45:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  46:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  47:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  49:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** 
  50:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  51:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  52:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** 
  53:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  54:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  55:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  56:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** 
  57:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  58:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** 
  59:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  60:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  61:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  62:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  63:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  66:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  67:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  68:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  69:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  70:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics. 
  71:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  72:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  73:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  74:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  75:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  76:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  77:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  78:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  79:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  80:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  81:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  82:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  83:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  84:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  85:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  86:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  87:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  88:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  89:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  90:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  91:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  92:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  
  93:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  94:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
  95:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  96:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** 
  97:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
  98:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
  99:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** 
 100:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 101:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** 											
 102:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** 
 103:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 104:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 105:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 106:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 107:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 108:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))                    
 109:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 110:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 111:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 112:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 113:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** 
 114:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 116:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 117:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 118:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 119:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** {
 120:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 121:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 122:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 123:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** 
 124:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 125:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 126:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 127:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 128:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** {
 129:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 130:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 131:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 132:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 133:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** 
 134:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 135:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 136:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 137:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** 
 138:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  #if UC_FAMILY == XMC1
 139:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 140:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 141:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 142:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 143:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 144:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 145:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** 
 146:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 147:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 148:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 149:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** 
 150:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 151:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 152:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 153:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** 
 154:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 156:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 157:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 158:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 159:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 160:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 161:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 162:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 163:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 164:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 165:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 166:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 167:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 168:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 169:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 170:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 171:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 172:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 174:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 175:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 176:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 177:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 178:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 179:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 180:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 181:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 183:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** 
 184:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  
 185:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 186:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  
 187:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 188:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 189:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 190:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 191:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 192:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 193:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 194:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 195:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 196:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 197:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 198:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 199:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 201:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 202:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 203:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 204:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** 
 205:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 206:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** 
 207:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** 
 208:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 209:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 210:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 211:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 212:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 213:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 214:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 215:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 216:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 217:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 218:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 219:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 220:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 221:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 222:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 223:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 224:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 225:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 226:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 227:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** 
 228:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** 
 229:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 230:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** {
 231:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 232:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 233:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****   
 234:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 235:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** }
 236:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** 
 237:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** 
 238:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 239:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 240:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 241:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 242:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 243:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 244:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 245:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 246:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 247:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 248:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 249:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 250:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 251:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 252:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 253:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 254:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 255:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** 
 256:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 257:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** {
  27              	 .loc 1 257 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  43 0008 0B46     	 mov r3,r1
  44 000a FB70     	 strb r3,[r7,#3]
 258:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 259:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** 
 260:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
  45              	 .loc 1 260 0
  46 000c FB78     	 ldrb r3,[r7,#3]
  47 000e 0122     	 movs r2,#1
  48 0010 9A40     	 lsls r2,r2,r3
  49 0012 7B68     	 ldr r3,[r7,#4]
  50 0014 5A60     	 str r2,[r3,#4]
 261:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** }
  51              	 .loc 1 261 0
  52 0016 0C37     	 adds r7,r7,#12
  53              	.LCFI3:
  54              	 .cfi_def_cfa_offset 4
  55 0018 BD46     	 mov sp,r7
  56              	.LCFI4:
  57              	 .cfi_def_cfa_register 13
  58              	 
  59 001a 5DF8047B 	 ldr r7,[sp],#4
  60              	.LCFI5:
  61              	 .cfi_restore 7
  62              	 .cfi_def_cfa_offset 0
  63 001e 7047     	 bx lr
  64              	 .cfi_endproc
  65              	.LFE171:
  67              	 .section .text.XMC_GPIO_SetOutputLow,"ax",%progbits
  68              	 .align 2
  69              	 .thumb
  70              	 .thumb_func
  72              	XMC_GPIO_SetOutputLow:
  73              	.LFB172:
 262:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** 
 263:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 264:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 265:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 266:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 267:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 268:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return  None
 269:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 270:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 271:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 272:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 273:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 274:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 275:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 276:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 277:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 278:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 279:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 280:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 281:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** 
 282:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 283:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** {
  74              	 .loc 1 283 0
  75              	 .cfi_startproc
  76              	 
  77              	 
  78              	 
  79 0000 80B4     	 push {r7}
  80              	.LCFI6:
  81              	 .cfi_def_cfa_offset 4
  82              	 .cfi_offset 7,-4
  83 0002 83B0     	 sub sp,sp,#12
  84              	.LCFI7:
  85              	 .cfi_def_cfa_offset 16
  86 0004 00AF     	 add r7,sp,#0
  87              	.LCFI8:
  88              	 .cfi_def_cfa_register 7
  89 0006 7860     	 str r0,[r7,#4]
  90 0008 0B46     	 mov r3,r1
  91 000a FB70     	 strb r3,[r7,#3]
 284:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 285:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** 
 286:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
  92              	 .loc 1 286 0
  93 000c FB78     	 ldrb r3,[r7,#3]
  94 000e 4FF48032 	 mov r2,#65536
  95 0012 9A40     	 lsls r2,r2,r3
  96 0014 7B68     	 ldr r3,[r7,#4]
  97 0016 5A60     	 str r2,[r3,#4]
 287:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** }
  98              	 .loc 1 287 0
  99 0018 0C37     	 adds r7,r7,#12
 100              	.LCFI9:
 101              	 .cfi_def_cfa_offset 4
 102 001a BD46     	 mov sp,r7
 103              	.LCFI10:
 104              	 .cfi_def_cfa_register 13
 105              	 
 106 001c 5DF8047B 	 ldr r7,[sp],#4
 107              	.LCFI11:
 108              	 .cfi_restore 7
 109              	 .cfi_def_cfa_offset 0
 110 0020 7047     	 bx lr
 111              	 .cfi_endproc
 112              	.LFE172:
 114 0022 00BF     	 .section .text.XMC_GPIO_GetInput,"ax",%progbits
 115              	 .align 2
 116              	 .thumb
 117              	 .thumb_func
 119              	XMC_GPIO_GetInput:
 120              	.LFB174:
 288:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** 
 289:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 290:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 291:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 292:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  port pin number.
 293:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 294:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 295:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 296:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 297:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * Configures port pin output to Toggle. It configures hardware registers Pn_OMR.
 298:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 299:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 300:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 301:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 302:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 303:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode(). Regis
 304:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * and does not contain any flip-flop. A read action delivers the value of 0.
 305:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 306:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 307:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** 
 308:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_ToggleOutput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 309:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** {
 310:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_ToggleOutput: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 311:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** 
 312:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10001U << pin;
 313:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** }
 314:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** 
 315:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 316:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 317:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_IN.
 318:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  Port pin number.
 319:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 320:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return uint32_t pin logic level status.
 321:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 322:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 323:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * Reads the Pn_IN register and returns the current logical value at the GPIO pin.
 324:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 325:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 326:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * None
 327:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 328:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 329:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to input mode using XMC_GPIO_SetMode().
 330:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 331:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 332:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** 
 333:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE uint32_t XMC_GPIO_GetInput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 334:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** {
 121              	 .loc 1 334 0
 122              	 .cfi_startproc
 123              	 
 124              	 
 125              	 
 126 0000 80B4     	 push {r7}
 127              	.LCFI12:
 128              	 .cfi_def_cfa_offset 4
 129              	 .cfi_offset 7,-4
 130 0002 83B0     	 sub sp,sp,#12
 131              	.LCFI13:
 132              	 .cfi_def_cfa_offset 16
 133 0004 00AF     	 add r7,sp,#0
 134              	.LCFI14:
 135              	 .cfi_def_cfa_register 7
 136 0006 7860     	 str r0,[r7,#4]
 137 0008 0B46     	 mov r3,r1
 138 000a FB70     	 strb r3,[r7,#3]
 335:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_GetInput: Invalid port", XMC_GPIO_CHECK_PORT(port));
 336:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** 
 337:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h ****   return (((port->IN) >> pin) & 0x1U);
 139              	 .loc 1 337 0
 140 000c 7B68     	 ldr r3,[r7,#4]
 141 000e 5A6A     	 ldr r2,[r3,#36]
 142 0010 FB78     	 ldrb r3,[r7,#3]
 143 0012 22FA03F3 	 lsr r3,r2,r3
 144 0016 03F00103 	 and r3,r3,#1
 338:F:/Fuckultate/ProectSI/Libraries/XMCLib/inc\xmc_gpio.h **** }
 145              	 .loc 1 338 0
 146 001a 1846     	 mov r0,r3
 147 001c 0C37     	 adds r7,r7,#12
 148              	.LCFI15:
 149              	 .cfi_def_cfa_offset 4
 150 001e BD46     	 mov sp,r7
 151              	.LCFI16:
 152              	 .cfi_def_cfa_register 13
 153              	 
 154 0020 5DF8047B 	 ldr r7,[sp],#4
 155              	.LCFI17:
 156              	 .cfi_restore 7
 157              	 .cfi_def_cfa_offset 0
 158 0024 7047     	 bx lr
 159              	 .cfi_endproc
 160              	.LFE174:
 162 0026 00BF     	 .section .text.PIN_INTERRUPT_GetPinValue,"ax",%progbits
 163              	 .align 2
 164              	 .thumb
 165              	 .thumb_func
 167              	PIN_INTERRUPT_GetPinValue:
 168              	.LFB228:
 169              	 .file 2 "F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT/pin_interrupt.h"
   1:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
   2:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @file pin_interrupt.h
   3:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @date 2016-03-02
   4:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
   5:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * NOTE:
   6:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
   8:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @cond
   9:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  10:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * PIN_INTERRUPT v4.0.2 - The PIN_INTERRUPT APP invokes user interrupt handler in a response to ris
  11:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                        edge event signal on a pin.
  12:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  13:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Copyright (c) 2016, Infineon Technologies AG
  14:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * All rights reserved.                        
  15:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                             
  16:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * following conditions are met:   
  18:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                                                              
  19:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   disclaimer.                        
  21:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * 
  22:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   disclaimer in the documentation and/or other materials provided with the distribution.     
  24:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                         
  25:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   products derived from this software without specific prior written permission. 
  27:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                             
  28:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    
  35:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                                                              
  36:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * with Infineon Technologies AG (dave@infineon.com).         
  38:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  39:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  40:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Change History
  41:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * --------------
  42:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * 2015-12-03:
  43:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     - Initial version for DAVEv4. <BR>
  44:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcond 
  45:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  46:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  47:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  48:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #ifndef PIN_INTERRUPT_H
  49:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #define PIN_INTERRUPT_H
  50:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  51:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
  52:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * HEADER FILES                                                                                    
  53:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  54:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if (UC_SERIES == XMC14)
  55:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include <xmc_scu.h>
  56:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
  57:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include <xmc_gpio.h>
  58:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include <xmc_eru.h>
  59:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include <DAVE_Common.h>
  60:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "pin_interrupt_conf.h"
  61:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  /*************************************************************************************************
  62:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * MACROS                                                                                          
  63:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  64:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if (!((XMC_LIB_MAJOR_VERSION == 2U) && \
  65:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****       (XMC_LIB_MINOR_VERSION >= 1U) && \
  66:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****       (XMC_LIB_PATCH_VERSION >= 6U)))
  67:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #error "PIN_INTERRUPT requires XMC Peripheral Library v2.1.6 or higher"
  68:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
  69:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  70:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  71:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup App_publicparam
  72:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
  73:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  74:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  75:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  @brief Initialization data structure for PIN_INTERRUPT APP
  76:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  77:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  78:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  79:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @}
  80:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  81:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  82:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  /*************************************************************************************************
  83:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * ENUMS
  84:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  85:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  86:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup PIN_INTERRUPT_enumerations
  87:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
  88:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  89:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /*
  90:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief enumeration for PIN_INTERRUPT APP
  91:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  92:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** typedef enum PIN_INTERRUPT_STATUS
  93:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
  94:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_STATUS_SUCCESS = 0U,        /**<APP initialization is success */
  95:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_STATUS_FAILURE = 1U         /**<APP initialization is failure */
  96:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** } PIN_INTERRUPT_STATUS_t;
  97:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  98:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  99:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 100:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Defines trigger edge for the event generation by ETLx (Event Trigger Logic, x = [0 to 3]) unit, 
 101:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * from ERSx(Event request source, x = [0 to 3]) unit.
 102:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 103:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** typedef enum PIN_INTERRUPT_EDGE
 104:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 105:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_NONE = 0U, /**< no event enabled */
 106:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_RISING = 1U,   /**< detection of rising edge generates the event */
 107:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_FALLING = 2U,  /**< detection of falling edge generates the event */
 108:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_BOTH = 3U      /**< detection of either edges generates the event */
 109:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** } PIN_INTERRUPT_EDGE_t;
 110:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 111:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @}
 112:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 113:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 114:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
 115:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * DATA STRUCTURES
 116:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** ***************************************************************************************************
 117:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 118:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup PIN_INTERRUPT_datastructures
 119:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
 120:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 121:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 122:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 123:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Configuration structure for PIN_INTERRUPT APP
 124:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 125:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** typedef struct PIN_INTERRUPT
 126:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 127:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ERU_t *eru;  /**< Mapped ERU module */
 128:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_GPIO_PORT_t *port;  /**< Mapped port number */
 129:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_GPIO_CONFIG_t gpio_config;   /**< Initializes the input pin characteristics */
 130:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ERU_ETL_CONFIG_t etl_config;  /**< reference to ERUx_ETLy (x = [0..1], y = [0..4])
 131:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****                                                       module configuration */
 132:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if (UC_SERIES == XMC14)
 133:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_SCU_IRQCTRL_t irqctrl;  /**< selects the interrupt source for a NVIC interrupt node*/
 134:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
 135:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   IRQn_Type IRQn;       /**< Mapped NVIC Node */
 136:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t irq_priority; 	  /**< Node Interrupt Priority */
 137:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if (UC_FAMILY == XMC4)
 138:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t irq_subpriority;  /**< Node Interrupt SubPriority only valid for XMC4x */
 139:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
 140:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t etl; /*< ETLx channel (x = [0..3])*/
 141:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t ogu; /*< OGUy channel (y = [0..3])*/
 142:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t pin; /*< Mapped pin number */
 143:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   bool enable_at_init;  /**< Interrupt enable for Node at initialization*/
 144:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** } PIN_INTERRUPT_t;
 145:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 146:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @}
 147:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 148:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 149:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #ifdef __cplusplus
 150:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** extern "C" {
 151:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
 152:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
 153:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * API Prototypes
 154:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
 155:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 156:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup PIN_INTERRUPT_apidoc
 157:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
 158:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 159:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 160:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Get PIN_INTERRUPT APP version
 161:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 162:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 163:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Description: </b><br>
 164:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * The function can be used to check application software compatibility with a
 165:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * specific version of the APP.
 166:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 167:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Example Usage:</b><br>
 168:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 169:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 170:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * #include <DAVE.h>
 171:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 172:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * int main(void) {
 173:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   DAVE_STATUS_t init_status;
 174:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   DAVE_APP_VERSION_t version;
 175:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 176:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   // Initialize PIN_INTERRUPT APP:
 177:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   // PIN_INTERRUPT_Init() is called from within DAVE_Init().
 178:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   init_status = DAVE_Init();
 179:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 180:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   if (DAVE_STATUS_SUCCESS == init_status)
 181:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   {
 182:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     version = PIN_INTERRUPT_GetAppVersion();
 183:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     if (version.major != 4U) {
 184:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *       // Probably, not the right version.
 185:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     }
 186:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   }
 187:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 188:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     // More code here
 189:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     while(1)
 190:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     {
 191:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     }
 192:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   return (1);
 193:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * }
 194:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR>
 195:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 196:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** DAVE_APP_VERSION_t PIN_INTERRUPT_GetAppVersion(void);
 197:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 198:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 199:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Initializes a PIN_INTERRUPT APP instance
 200:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 201:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return
 202:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *            PIN_INTERRUPT_STATUS_SUCCESS             : if initialization is successful\n
 203:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *            PIN_INTERRUPT_STATUS_FAILURE             : if initialization is failed
 204:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 205:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Description:</b><br>
 206:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * PIN_INTERRUPT_Init API is called during initialization of DAVE APPS. This API Initializes input 
 207:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * ERU and OGU hardware module initialization, Configures NVIC node and its priority in order to ge
 208:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 209:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Example Usage:</b><br>
 210:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 211:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 212:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * #include <DAVE.h>
 213:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 214:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * int main(void)
 215:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * {
 216:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   DAVE_STATUS_t status;
 217:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 218:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   status = DAVE_Init();  //  PIN_INTERRUPT_Init API is called during initialization of DAVE APPS
 219:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   if(DAVE_STATUS_SUCCESS == status)
 220:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   {
 221:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    // user code
 222:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 223:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     while(1)
 224:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     {
 225:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 226:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     }
 227:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   }
 228:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   return (1);
 229:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * }
 230:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 231:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR>
 232:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 233:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** PIN_INTERRUPT_STATUS_t PIN_INTERRUPT_Init(const PIN_INTERRUPT_t *const handle);
 234:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 235:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 236:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Enables the IRQ.
 237:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 238:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return None
 239:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * <BR><P ALIGN="LEFT"><B>Example:</B>
 240:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 241:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 242:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  #include <DAVE.h>
 243:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 244:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  int main(void)
 245:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  {
 246:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    DAVE_STATUS_t status;
 247:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 248:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   status = DAVE_Init();  //  PIN_INTERRUPT_Init API is called during initialization of DAVE APPS
 249:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   if(DAVE_STATUS_SUCCESS == status)
 250:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   {
 251:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    // user code
 252:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 253:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    PIN_INTERRUPT_Enable(&PIN_INTERRUPT_0);
 254:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    while(1)
 255:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    {}
 256:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   }
 257:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 258:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    return (1);
 259:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  }
 260:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR> </p>
 261:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 262:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** __STATIC_INLINE void PIN_INTERRUPT_Enable(const PIN_INTERRUPT_t *const handle)
 263:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 264:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ASSERT("PIN_INTERRUPT_Enable: Handler null pointer", handle != NULL);
 265:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   NVIC_EnableIRQ(handle->IRQn);
 266:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** }
 267:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 268:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 269:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Disables the IRQ.
 270:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 271:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return None
 272:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * <BR><P ALIGN="LEFT"><B>Example:</B>
 273:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 274:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 275:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  #include <DAVE.h>
 276:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 277:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  int main(void)
 278:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  {
 279:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 280:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    DAVE_STATUS_t status;
 281:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 282:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   status = DAVE_Init();  //  PIN_INTERRUPT_Init API is called during initialization of DAVE APPS
 283:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   if(DAVE_STATUS_SUCCESS == status)
 284:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   {
 285:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    // user code
 286:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 287:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    PIN_INTERRUPT_Disable(&PIN_INTERRUPT_0);
 288:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    while(1)
 289:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    {}
 290:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   }
 291:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 292:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    return (1);
 293:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 294:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  }
 295:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR> </p>
 296:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 297:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** __STATIC_INLINE void PIN_INTERRUPT_Disable(const PIN_INTERRUPT_t *const handle)
 298:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 299:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ASSERT("PIN_INTERRUPT_Disable: Handler null pointer", handle != NULL);
 300:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   NVIC_DisableIRQ(handle->IRQn);
 301:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** }
 302:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 303:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 304:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @brief Read input level of port pin.
 305:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 306:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @return uint32_t input logic level. Range:0-1
 307:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 308:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * \par<b>Description:</b><br>
 309:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * This function reads the Pn_IN register and returns the current logical value at the GPIO pin.
 310:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 311:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 312:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * Example Usage:
 313:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @code
 314:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 315:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * int main(void)
 316:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * {
 317:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   DAVE_STATUS_t status;
 318:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   uint32_t pin_status;
 319:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   status = DAVE_Init();   // (DAVE_STATUS_t)PIN_INTERRUPT_Init(&PIN_INTERRUPT_0) is called within
 320:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   if(status == DAVE_STATUS_SUCCESS)
 321:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   {
 322:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 323:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   }
 324:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   else
 325:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   {
 326:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 327:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     while(1U)
 328:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     {
 329:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     }
 330:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   }
 331:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 332:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   while(1U)
 333:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   {
 334:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     pin_status = PIN_INTERRUPT_GetPinValue(&PIN_INTERRUPT_0);
 335:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     if(pin_status == 1)
 336:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     {
 337:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *       // Add application code here
 338:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     }
 339:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     else
 340:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     {
 341:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *       // Add application code here
 342:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     }
 343:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   }
 344:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   return (1);
 345:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * }
 346:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *  @endcode
 347:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** */
 348:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** __STATIC_INLINE uint32_t PIN_INTERRUPT_GetPinValue(const PIN_INTERRUPT_t *const handle)
 349:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 170              	 .loc 2 349 0
 171              	 .cfi_startproc
 172              	 
 173              	 
 174 0000 80B5     	 push {r7,lr}
 175              	.LCFI18:
 176              	 .cfi_def_cfa_offset 8
 177              	 .cfi_offset 7,-8
 178              	 .cfi_offset 14,-4
 179 0002 82B0     	 sub sp,sp,#8
 180              	.LCFI19:
 181              	 .cfi_def_cfa_offset 16
 182 0004 00AF     	 add r7,sp,#0
 183              	.LCFI20:
 184              	 .cfi_def_cfa_register 7
 185 0006 7860     	 str r0,[r7,#4]
 350:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ASSERT("PIN_INTERRUPT_GetPinValue: Handler null pointer", handle != NULL);
 351:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   return (XMC_GPIO_GetInput(handle->port, handle->pin));
 186              	 .loc 2 351 0
 187 0008 7B68     	 ldr r3,[r7,#4]
 188 000a 5A68     	 ldr r2,[r3,#4]
 189 000c 7B68     	 ldr r3,[r7,#4]
 190 000e 93F82130 	 ldrb r3,[r3,#33]
 191 0012 1046     	 mov r0,r2
 192 0014 1946     	 mov r1,r3
 193 0016 FFF7FEFF 	 bl XMC_GPIO_GetInput
 194 001a 0346     	 mov r3,r0
 352:F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** }
 195              	 .loc 2 352 0
 196 001c 1846     	 mov r0,r3
 197 001e 0837     	 adds r7,r7,#8
 198              	.LCFI21:
 199              	 .cfi_def_cfa_offset 8
 200 0020 BD46     	 mov sp,r7
 201              	.LCFI22:
 202              	 .cfi_def_cfa_register 13
 203              	 
 204 0022 80BD     	 pop {r7,pc}
 205              	 .cfi_endproc
 206              	.LFE228:
 208              	 .section .text.DIGITAL_IO_SetOutputHigh,"ax",%progbits
 209              	 .align 2
 210              	 .thumb
 211              	 .thumb_func
 213              	DIGITAL_IO_SetOutputHigh:
 214              	.LFB287:
 215              	 .file 3 "F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO/digital_io.h"
   1:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** /*
   2:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   3:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @file digital_io.h
   4:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @date 2016-07-08
   5:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   6:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  * NOTE:
   7:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   8:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   9:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @cond
  10:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  11:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DIGITAL_IO v4.0.16 - The DIGITAL_IO APP is used to configure a port pin as digital Input/Output.
  12:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  13:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  14:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  * All rights reserved.
  15:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  16:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  * following conditions are met:
  18:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  19:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   disclaimer.
  21:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  22:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  25:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   products derived from this software without specific prior written permission.
  27:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  28:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  36:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  * with Infineon Technologies AG (dave@infineon.com).
  38:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  39:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  40:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Change History
  41:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  * --------------
  42:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  43:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-02-16
  44:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Initial version
  45:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  46:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-04-22
  47:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - XMC_ASSERT is added in static inline functions.<br>
  48:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  49:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-06-20
  50:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Version check added for XMCLib dependency.<br>
  51:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  52:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-12-22
  53:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Added hardware controlled IO feature.
  54:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2016-07-08:
  55:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Fixed incorrect case for an included header.<br>
  56:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  57:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @endcond
  58:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  59:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  */
  60:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  61:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  62:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  * HEADER FILES
  63:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  64:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  65:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifndef DIGITAL_IO_H
  66:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_H
  67:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  68:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** #include <xmc_gpio.h>
  69:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** #include <DAVE_Common.h>
  70:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "digital_io_conf.h"
  71:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  72:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  73:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  * MACROS
  74:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  75:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** #if (!((XMC_LIB_MAJOR_VERSION == 2U) && \
  76:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****        (XMC_LIB_MINOR_VERSION >= 0U) && \
  77:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****        (XMC_LIB_PATCH_VERSION >= 0U)))
  78:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** #error "DIGITAL_IO requires XMC Peripheral Library v2.0.0 or higher"
  79:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
  80:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  81:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  /*************************************************************************************************
  82:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  * ENUMS
  83:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  84:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  85:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  86:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_enumerations
  87:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
  88:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  89:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  90:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  91:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization status of DIGITAL_IO APP.
  92:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  93:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef enum DIGITAL_IO_STATUS
  94:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** {
  95:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_OK = 0U,/**< 0=Status OK */
  96:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_FAILURE = 1U/**< 1=Status Failed */
  97:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_STATUS_t;
  98:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  99:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 100:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 101:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 102:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 103:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 104:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DATA STRUCTURES
 105:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 106:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 107:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_datastructures
 108:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 109:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 110:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 111:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 112:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization data structure of DIGITAL_IO APP
 113:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 114:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef struct DIGITAL_IO
 115:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 116:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_PORT_t *const gpio_port;             /**< port number */
 117:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_CONFIG_t gpio_config;          /**< mode, initial output level and pad driver stre
 118:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****   const uint8_t gpio_pin;                       /**< pin number */
 119:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_HWCTRL_t hwctrl;               /**< Hardware port control */
 120:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_t;
 121:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 122:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 123:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 124:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 125:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 126:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 127:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 128:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 129:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  * API Prototypes
 130:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 131:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 132:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 133:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifdef __cplusplus
 134:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** extern "C" {
 135:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
 136:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 137:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 138:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_apidoc
 139:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 140:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 141:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 142:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 143:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 144:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 145:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Get DIGITAL_IO APP version
 146:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 147:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 148:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description: </b><br>
 149:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * The function can be used to check application software compatibility with a
 150:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * specific version of the APP.
 151:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 152:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 153:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 154:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 155:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>
 156:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 157:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 158:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 159:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t init_status;
 160:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_APP_VERSION_t version;
 161:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 162:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // Initialize DIGITAL_IO APP:
 163:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // DIGITAL_IO_Init() is called from within DAVE_Init().
 164:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *   init_status = DAVE_Init();
 165:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(init_status == DAVE_STATUS_SUCCESS)
 166:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 167:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *     version = DIGITAL_IO_GetAppVersion();
 168:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *     if (version.major != 4U) {
 169:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Probably, not the right version.
 170:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 171:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 172:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 173:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // More code here
 174:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1) {
 175:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 176:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 177:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *     return (1);
 178:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 179:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * @endcode<BR>
 180:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 181:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 182:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** DAVE_APP_VERSION_t DIGITAL_IO_GetAppVersion(void);
 183:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 184:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 185:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 186:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to initialize the port pin as per UI settings.
 187:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 188:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DIGITAL_IO_STATUS_t DIGITAL_IO APP status. Refer @ref DIGITAL_IO_STATUS_t structure for d
 189:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 190:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 191:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function initializes GPIO port registers IOCR,PDISC,OMR,PDR/PHCR to configure pin direction,
 192:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * and pad driver strength/hysteresis.
 193:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 194:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 195:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * None
 196:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 197:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 198:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 199:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 200:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 201:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 202:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 203:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 204:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 205:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 206:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 207:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 208:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 209:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 210:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 211:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 212:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 213:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 214:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 215:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 216:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 217:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 218:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 219:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return 1U;
 220:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 221:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 222:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 223:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 224:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** DIGITAL_IO_STATUS_t DIGITAL_IO_Init(const DIGITAL_IO_t *const handler);
 225:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 226:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 227:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 228:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to set port pin high.
 229:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 230:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 231:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 232:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 233:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to high level
 234:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 235:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 236:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *  DIGITAL_IO_SetOutputLow()
 237:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 238:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 239:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 240:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 241:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 242:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 243:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 244:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 245:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 246:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 247:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 248:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 249:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 250:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 251:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 252:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 253:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 254:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 255:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 256:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 257:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DIGITAL_IO_SetOutputHigh(&DIGITAL_IO_0);
 258:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 259:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 260:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Add application code here
 261:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 262:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 263:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 264:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 265:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 266:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 267:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 268:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputHigh(const DIGITAL_IO_t *const handler)
 269:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 216              	 .loc 3 269 0
 217              	 .cfi_startproc
 218              	 
 219              	 
 220 0000 80B5     	 push {r7,lr}
 221              	.LCFI23:
 222              	 .cfi_def_cfa_offset 8
 223              	 .cfi_offset 7,-8
 224              	 .cfi_offset 14,-4
 225 0002 82B0     	 sub sp,sp,#8
 226              	.LCFI24:
 227              	 .cfi_def_cfa_offset 16
 228 0004 00AF     	 add r7,sp,#0
 229              	.LCFI25:
 230              	 .cfi_def_cfa_register 7
 231 0006 7860     	 str r0,[r7,#4]
 270:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputHigh: handler null pointer", handler != NULL);
 271:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputHigh(handler->gpio_port, handler->gpio_pin);
 232              	 .loc 3 271 0
 233 0008 7B68     	 ldr r3,[r7,#4]
 234 000a 1A68     	 ldr r2,[r3]
 235 000c 7B68     	 ldr r3,[r7,#4]
 236 000e 1B7C     	 ldrb r3,[r3,#16]
 237 0010 1046     	 mov r0,r2
 238 0012 1946     	 mov r1,r3
 239 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 272:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 240              	 .loc 3 272 0
 241 0018 0837     	 adds r7,r7,#8
 242              	.LCFI26:
 243              	 .cfi_def_cfa_offset 8
 244 001a BD46     	 mov sp,r7
 245              	.LCFI27:
 246              	 .cfi_def_cfa_register 13
 247              	 
 248 001c 80BD     	 pop {r7,pc}
 249              	 .cfi_endproc
 250              	.LFE287:
 252 001e 00BF     	 .section .text.DIGITAL_IO_SetOutputLow,"ax",%progbits
 253              	 .align 2
 254              	 .thumb
 255              	 .thumb_func
 257              	DIGITAL_IO_SetOutputLow:
 258              	.LFB288:
 273:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 274:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 275:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to reset port pin.
 276:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 277:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 278:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 279:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 280:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to low level.
 281:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 282:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 283:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * DIGITAL_IO_SetOutputHigh()
 284:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 285:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 286:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 287:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *  #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 288:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *  int main(void)
 289:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *  {
 290:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DAVE_STATUS_t status;
 291:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *    status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_I
 292:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *    if(status == DAVE_STATUS_SUCCESS)
 293:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 294:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG("DAVE Apps initialization success\n");
 295:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 296:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *    else
 297:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 298:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 299:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *      while(1U)
 300:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *      {
 301:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *      }
 302:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 303:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *    //Placeholder for user application code. The while loop below can be replaced with user applic
 304:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DIGITAL_IO_SetOutputLow(&DIGITAL_IO_0);
 305:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *    while(1U)
 306:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 307:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *      // Add application code here
 308:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 309:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 310:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 311:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 312:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 313:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 314:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 315:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputLow(const DIGITAL_IO_t *const handler)
 316:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 259              	 .loc 3 316 0
 260              	 .cfi_startproc
 261              	 
 262              	 
 263 0000 80B5     	 push {r7,lr}
 264              	.LCFI28:
 265              	 .cfi_def_cfa_offset 8
 266              	 .cfi_offset 7,-8
 267              	 .cfi_offset 14,-4
 268 0002 82B0     	 sub sp,sp,#8
 269              	.LCFI29:
 270              	 .cfi_def_cfa_offset 16
 271 0004 00AF     	 add r7,sp,#0
 272              	.LCFI30:
 273              	 .cfi_def_cfa_register 7
 274 0006 7860     	 str r0,[r7,#4]
 317:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputLow: handler null pointer", handler != NULL);
 318:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputLow(handler->gpio_port,handler->gpio_pin);
 275              	 .loc 3 318 0
 276 0008 7B68     	 ldr r3,[r7,#4]
 277 000a 1A68     	 ldr r2,[r3]
 278 000c 7B68     	 ldr r3,[r7,#4]
 279 000e 1B7C     	 ldrb r3,[r3,#16]
 280 0010 1046     	 mov r0,r2
 281 0012 1946     	 mov r1,r3
 282 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 319:F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 283              	 .loc 3 319 0
 284 0018 0837     	 adds r7,r7,#8
 285              	.LCFI31:
 286              	 .cfi_def_cfa_offset 8
 287 001a BD46     	 mov sp,r7
 288              	.LCFI32:
 289              	 .cfi_def_cfa_register 13
 290              	 
 291 001c 80BD     	 pop {r7,pc}
 292              	 .cfi_endproc
 293              	.LFE288:
 295              	 .global distance
 296 001e 00BF     	 .section .bss.distance,"aw",%nobits
 297              	 .align 2
 300              	distance:
 301 0000 00000000 	 .space 4
 302              	 .global cooldown
 303              	 .section .bss.cooldown,"aw",%nobits
 304              	 .align 2
 307              	cooldown:
 308 0000 00000000 	 .space 4
 309              	 .section .text.ERU1_0_IRQHandler,"ax",%progbits
 310              	 .align 2
 311              	 .global ERU1_0_IRQHandler
 312              	 .thumb
 313              	 .thumb_func
 315              	ERU1_0_IRQHandler:
 316              	.LFB291:
 317              	 .file 4 "../main.c"
   1:../main.c     **** #include <DAVE.h>
   2:../main.c     **** 
   3:../main.c     **** int distance = 0;
   4:../main.c     **** 
   5:../main.c     **** int cooldown = 0;
   6:../main.c     **** 
   7:../main.c     **** void EchoReceivedFromSensor(){
 318              	 .loc 4 7 0
 319              	 .cfi_startproc
 320              	 
 321              	 
 322 0000 80B5     	 push {r7,lr}
 323              	.LCFI33:
 324              	 .cfi_def_cfa_offset 8
 325              	 .cfi_offset 7,-8
 326              	 .cfi_offset 14,-4
 327 0002 00AF     	 add r7,sp,#0
 328              	.LCFI34:
 329              	 .cfi_def_cfa_register 7
   8:../main.c     **** 	if(PIN_INTERRUPT_GetPinValue(&PIN_INTERRUPT_ECHO_MEASURE)){
 330              	 .loc 4 8 0
 331 0004 0B48     	 ldr r0,.L12
 332 0006 FFF7FEFF 	 bl PIN_INTERRUPT_GetPinValue
 333 000a 0346     	 mov r3,r0
 334 000c 002B     	 cmp r3,#0
 335 000e 06D0     	 beq .L10
   9:../main.c     **** 		TIMER_Clear(&TIMER_DISTANCE);
 336              	 .loc 4 9 0
 337 0010 0948     	 ldr r0,.L12+4
 338 0012 FFF7FEFF 	 bl TIMER_Clear
  10:../main.c     **** 		TIMER_Start(&TIMER_DISTANCE);
 339              	 .loc 4 10 0
 340 0016 0848     	 ldr r0,.L12+4
 341 0018 FFF7FEFF 	 bl TIMER_Start
 342 001c 09E0     	 b .L9
 343              	.L10:
  11:../main.c     **** 	}else{
  12:../main.c     **** 		distance = TIMER_GetTime(&TIMER_DISTANCE);
 344              	 .loc 4 12 0
 345 001e 0648     	 ldr r0,.L12+4
 346 0020 FFF7FEFF 	 bl TIMER_GetTime
 347 0024 0346     	 mov r3,r0
 348 0026 1A46     	 mov r2,r3
 349 0028 044B     	 ldr r3,.L12+8
 350 002a 1A60     	 str r2,[r3]
  13:../main.c     **** 		TIMER_Stop(&TIMER_DISTANCE);
 351              	 .loc 4 13 0
 352 002c 0248     	 ldr r0,.L12+4
 353 002e FFF7FEFF 	 bl TIMER_Stop
 354              	.L9:
  14:../main.c     **** 	}
  15:../main.c     **** }
 355              	 .loc 4 15 0
 356 0032 80BD     	 pop {r7,pc}
 357              	.L13:
 358              	 .align 2
 359              	.L12:
 360 0034 00000000 	 .word PIN_INTERRUPT_ECHO_MEASURE
 361 0038 00000000 	 .word TIMER_DISTANCE
 362 003c 00000000 	 .word distance
 363              	 .cfi_endproc
 364              	.LFE291:
 366              	 .section .text.main,"ax",%progbits
 367              	 .align 2
 368              	 .global main
 369              	 .thumb
 370              	 .thumb_func
 372              	main:
 373              	.LFB292:
  16:../main.c     **** 
  17:../main.c     **** 
  18:../main.c     **** int main(void){
 374              	 .loc 4 18 0
 375              	 .cfi_startproc
 376              	 
 377              	 
 378 0000 80B5     	 push {r7,lr}
 379              	.LCFI35:
 380              	 .cfi_def_cfa_offset 8
 381              	 .cfi_offset 7,-8
 382              	 .cfi_offset 14,-4
 383 0002 82B0     	 sub sp,sp,#8
 384              	.LCFI36:
 385              	 .cfi_def_cfa_offset 16
 386 0004 00AF     	 add r7,sp,#0
 387              	.LCFI37:
 388              	 .cfi_def_cfa_register 7
  19:../main.c     **** 	DAVE_STATUS_t status;
  20:../main.c     **** 
  21:../main.c     **** 	status = DAVE_Init();
 389              	 .loc 4 21 0
 390 0006 FFF7FEFF 	 bl DAVE_Init
 391 000a 0346     	 mov r3,r0
 392 000c FB71     	 strb r3,[r7,#7]
  22:../main.c     **** 
  23:../main.c     **** 	if(status != DAVE_STATUS_SUCCESS){
 393              	 .loc 4 23 0
 394 000e FB79     	 ldrb r3,[r7,#7]
 395 0010 002B     	 cmp r3,#0
 396 0012 00D0     	 beq .L15
 397              	.L16:
  24:../main.c     **** 		XMC_DEBUG("DAVE APPs initialization failed\n");
  25:../main.c     **** 
  26:../main.c     **** 		while(1U){
  27:../main.c     **** 
  28:../main.c     **** 		}
 398              	 .loc 4 28 0 discriminator 1
 399 0014 FEE7     	 b .L16
 400              	.L15:
  29:../main.c     **** 	}
  30:../main.c     **** 
  31:../main.c     **** 	while(1U){
  32:../main.c     **** 		if(distance < 100000){
 401              	 .loc 4 32 0
 402 0016 0C4B     	 ldr r3,.L20
 403 0018 1B68     	 ldr r3,[r3]
 404 001a 0C4A     	 ldr r2,.L20+4
 405 001c 9342     	 cmp r3,r2
 406 001e 02DC     	 bgt .L17
  33:../main.c     **** 			cooldown = 3000000;
 407              	 .loc 4 33 0
 408 0020 0B4B     	 ldr r3,.L20+8
 409 0022 0C4A     	 ldr r2,.L20+12
 410 0024 1A60     	 str r2,[r3]
 411              	.L17:
  34:../main.c     **** 		}
  35:../main.c     **** 		if(cooldown > 0){
 412              	 .loc 4 35 0
 413 0026 0A4B     	 ldr r3,.L20+8
 414 0028 1B68     	 ldr r3,[r3]
 415 002a 002B     	 cmp r3,#0
 416 002c 03DD     	 ble .L18
  36:../main.c     **** 			DIGITAL_IO_SetOutputHigh(&DIGITAL_IO_LED_OUTPUT);
 417              	 .loc 4 36 0
 418 002e 0A48     	 ldr r0,.L20+16
 419 0030 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 420 0034 02E0     	 b .L19
 421              	.L18:
  37:../main.c     **** 		}else{
  38:../main.c     **** 			DIGITAL_IO_SetOutputLow(&DIGITAL_IO_LED_OUTPUT);
 422              	 .loc 4 38 0
 423 0036 0848     	 ldr r0,.L20+16
 424 0038 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 425              	.L19:
  39:../main.c     **** 		}
  40:../main.c     **** 		--cooldown;
 426              	 .loc 4 40 0
 427 003c 044B     	 ldr r3,.L20+8
 428 003e 1B68     	 ldr r3,[r3]
 429 0040 013B     	 subs r3,r3,#1
 430 0042 034A     	 ldr r2,.L20+8
 431 0044 1360     	 str r3,[r2]
  41:../main.c     **** 	}
 432              	 .loc 4 41 0
 433 0046 E6E7     	 b .L15
 434              	.L21:
 435              	 .align 2
 436              	.L20:
 437 0048 00000000 	 .word distance
 438 004c 9F860100 	 .word 99999
 439 0050 00000000 	 .word cooldown
 440 0054 C0C62D00 	 .word 3000000
 441 0058 00000000 	 .word DIGITAL_IO_LED_OUTPUT
 442              	 .cfi_endproc
 443              	.LFE292:
 445              	 .text
 446              	.Letext0:
 447              	 .file 5 "d:\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 448              	 .file 6 "d:\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 449              	 .file 7 "F:/Fuckultate/ProectSI/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
 450              	 .file 8 "F:/Fuckultate/ProectSI/Libraries/XMCLib/inc/xmc4_scu.h"
 451              	 .file 9 "F:/Fuckultate/ProectSI/Libraries/XMCLib/inc/xmc4_gpio.h"
 452              	 .file 10 "F:/Fuckultate/ProectSI/Libraries/XMCLib/inc/xmc_eru.h"
 453              	 .file 11 "F:/Fuckultate/ProectSI/Libraries/XMCLib/inc/xmc_ccu8.h"
 454              	 .file 12 "F:/Fuckultate/ProectSI/Dave/Generated/GLOBAL_CCU8/global_ccu8.h"
 455              	 .file 13 "F:/Fuckultate/ProectSI/Dave/Generated/TIMER/timer.h"
 456              	 .file 14 "F:/Fuckultate/ProectSI/Dave/Generated/DAVE.h"
 457              	 .file 15 "F:/Fuckultate/ProectSI/Libraries/CMSIS/Include/core_cm4.h"
 458              	 .file 16 "F:/Fuckultate/ProectSI/Libraries/CMSIS/Infineon/XMC4700_series/Include/system_XMC4700.h"
 459              	 .file 17 "F:/Fuckultate/ProectSI/Dave/Generated/PIN_INTERRUPT/pin_interrupt_extern.h"
 460              	 .file 18 "F:/Fuckultate/ProectSI/Dave/Generated/TIMER/timer_extern.h"
 461              	 .file 19 "F:/Fuckultate/ProectSI/Dave/Generated/DIGITAL_IO/digital_io_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
    {standard input}:20     .text.XMC_GPIO_SetOutputHigh:00000000 $t
    {standard input}:24     .text.XMC_GPIO_SetOutputHigh:00000000 XMC_GPIO_SetOutputHigh
    {standard input}:68     .text.XMC_GPIO_SetOutputLow:00000000 $t
    {standard input}:72     .text.XMC_GPIO_SetOutputLow:00000000 XMC_GPIO_SetOutputLow
    {standard input}:115    .text.XMC_GPIO_GetInput:00000000 $t
    {standard input}:119    .text.XMC_GPIO_GetInput:00000000 XMC_GPIO_GetInput
    {standard input}:163    .text.PIN_INTERRUPT_GetPinValue:00000000 $t
    {standard input}:167    .text.PIN_INTERRUPT_GetPinValue:00000000 PIN_INTERRUPT_GetPinValue
    {standard input}:209    .text.DIGITAL_IO_SetOutputHigh:00000000 $t
    {standard input}:213    .text.DIGITAL_IO_SetOutputHigh:00000000 DIGITAL_IO_SetOutputHigh
    {standard input}:253    .text.DIGITAL_IO_SetOutputLow:00000000 $t
    {standard input}:257    .text.DIGITAL_IO_SetOutputLow:00000000 DIGITAL_IO_SetOutputLow
    {standard input}:300    .bss.distance:00000000 distance
    {standard input}:297    .bss.distance:00000000 $d
    {standard input}:307    .bss.cooldown:00000000 cooldown
    {standard input}:304    .bss.cooldown:00000000 $d
    {standard input}:310    .text.ERU1_0_IRQHandler:00000000 $t
    {standard input}:315    .text.ERU1_0_IRQHandler:00000000 ERU1_0_IRQHandler
    {standard input}:360    .text.ERU1_0_IRQHandler:00000034 $d
    {standard input}:367    .text.main:00000000 $t
    {standard input}:372    .text.main:00000000 main
    {standard input}:437    .text.main:00000048 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
TIMER_Clear
TIMER_Start
TIMER_GetTime
TIMER_Stop
PIN_INTERRUPT_ECHO_MEASURE
TIMER_DISTANCE
DAVE_Init
DIGITAL_IO_LED_OUTPUT
